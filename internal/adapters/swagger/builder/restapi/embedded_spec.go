// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "OpenAPI specification for LogicFM Builder microservice",
    "title": "Builder microservice API",
    "contact": {
      "email": "ahamtat108@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/info": {
      "get": {
        "description": "Endpoint gets the application name and release info\n",
        "tags": [
          "info"
        ],
        "summary": "get microservice info",
        "operationId": "get",
        "responses": {
          "200": {
            "description": "displays application name and release info",
            "schema": {
              "$ref": "#/definitions/info"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/rule/add/{musrvId}": {
      "post": {
        "description": "Endpoint used to generate rule and query structures\n",
        "tags": [
          "rule"
        ],
        "summary": "build rule and query structures",
        "operationId": "addNew",
        "parameters": [
          {
            "name": "rule",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/rule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "musrvId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/rules/{id}": {
      "put": {
        "tags": [
          "rule"
        ],
        "operationId": "update",
        "parameters": [
          {
            "name": "rule",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "rule"
        ],
        "operationId": "delete",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "info": {
      "type": "object",
      "properties": {
        "branch": {
          "description": "Deployed git branch",
          "type": "string"
        },
        "commit": {
          "description": "SHA from git",
          "type": "string"
        },
        "date": {
          "description": "Release date",
          "type": "string"
        },
        "name": {
          "description": "Application name",
          "type": "string"
        },
        "release": {
          "description": "Release version",
          "type": "string"
        },
        "repositoryUrl": {
          "description": "Git repository URL",
          "type": "string"
        }
      }
    },
    "rule": {
      "type": "object",
      "required": [
        "if",
        "then"
      ],
      "properties": {
        "id": {
          "description": "Rule ID",
          "type": "string",
          "format": "uuid"
        },
        "if": {
          "description": "Rule antecedents"
        },
        "then": {
          "description": "Rule consequent"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "OpenAPI specification for LogicFM Builder microservice",
    "title": "Builder microservice API",
    "contact": {
      "email": "ahamtat108@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/info": {
      "get": {
        "description": "Endpoint gets the application name and release info\n",
        "tags": [
          "info"
        ],
        "summary": "get microservice info",
        "operationId": "get",
        "responses": {
          "200": {
            "description": "displays application name and release info",
            "schema": {
              "$ref": "#/definitions/info"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/rule/add/{musrvId}": {
      "post": {
        "description": "Endpoint used to generate rule and query structures\n",
        "tags": [
          "rule"
        ],
        "summary": "build rule and query structures",
        "operationId": "addNew",
        "parameters": [
          {
            "name": "rule",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/rule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "musrvId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/rules/{id}": {
      "put": {
        "tags": [
          "rule"
        ],
        "operationId": "update",
        "parameters": [
          {
            "name": "rule",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/rule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "rule"
        ],
        "operationId": "delete",
        "responses": {
          "204": {
            "description": "Deleted"
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "info": {
      "type": "object",
      "properties": {
        "branch": {
          "description": "Deployed git branch",
          "type": "string"
        },
        "commit": {
          "description": "SHA from git",
          "type": "string"
        },
        "date": {
          "description": "Release date",
          "type": "string"
        },
        "name": {
          "description": "Application name",
          "type": "string"
        },
        "release": {
          "description": "Release version",
          "type": "string"
        },
        "repositoryUrl": {
          "description": "Git repository URL",
          "type": "string"
        }
      }
    },
    "rule": {
      "type": "object",
      "required": [
        "if",
        "then"
      ],
      "properties": {
        "id": {
          "description": "Rule ID",
          "type": "string",
          "format": "uuid"
        },
        "if": {
          "description": "Rule antecedents"
        },
        "then": {
          "description": "Rule consequent"
        }
      }
    }
  }
}`))
}
