// Code generated by go-swagger; DO NOT EDIT.

package rule

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"../internal/models"
)

// DeleteRuleReader is a Reader for the DeleteRule structure.
type DeleteRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteRuleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteRuleNoContent creates a DeleteRuleNoContent with default headers values
func NewDeleteRuleNoContent() *DeleteRuleNoContent {
	return &DeleteRuleNoContent{}
}

/*DeleteRuleNoContent handles this case with default header values.

Deleted
*/
type DeleteRuleNoContent struct {
}

func (o *DeleteRuleNoContent) Error() string {
	return fmt.Sprintf("[DELETE /rules/{id}][%d] deleteRuleNoContent ", 204)
}

func (o *DeleteRuleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteRuleDefault creates a DeleteRuleDefault with default headers values
func NewDeleteRuleDefault(code int) *DeleteRuleDefault {
	return &DeleteRuleDefault{
		_statusCode: code,
	}
}

/*DeleteRuleDefault handles this case with default header values.

error
*/
type DeleteRuleDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete rule default response
func (o *DeleteRuleDefault) Code() int {
	return o._statusCode
}

func (o *DeleteRuleDefault) Error() string {
	return fmt.Sprintf("[DELETE /rules/{id}][%d] deleteRule default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteRuleDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
